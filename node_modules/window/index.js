/* Dummy Test Double of Window Object for NodeJs
 * MAC OSX v10.6.7
 * Chrome 13.0.782.24 beta
 * Below is code used to generate object. Object is 3 levels deep.

=======================================================================

var newLine = '<br/>';

function times(x, fn) {
  if (x <= 0) return;
  for (var i = 0; i < x; i++) fn.call(this, i, x);
}

function getProperties(obj, depth) {
  var i, p = [];
  depth++;
  if (depth > 3) return 'function () {}';
  if (typeof obj != 'object') {
    return ' ' + (typeof obj == 'function' ? 'function () {}' : typeof obj == 'string' ? '"' + obj + '"' : obj);
  }
  for (i in obj) {
    if (obj === obj[i]) continue;
    var whitespace = '', endspace = '';
    times(depth - 1, function() {
      endspace += '  ';
    });
    times(depth, function() {
      whitespace += '  ';
    });
    p.push(whitespace + i + ':' + getProperties(obj[i], depth));
  }
  return p.length ? '{' + newLine + p.join(',' + newLine) + newLine + endspace  + '}' : ' function () {}';
}

document.write('<pre>' + getProperties(window, 0) + '</pre>');

=======================================================================*/

module.exports = {

  location:{
    replace: function () {},
    origin: "file://",
    assign: function () {},
    pathname: "/Users/fat/index.html",
    host: "localhost",
    hostname: "localhost",
    port: "",
    search: "",
    hash: "",
    reload: function () {},
    href: "file://localhost/Users/fat/index.html",
    protocol: "file:",
    getParameter: function () {}
  },
  external:{
    AddSearchProvider: function () {}
  },
  chrome:{
    loadTimes: function () {},
    csi: function () {},
    searchBox:{
      value: function () {},
      verbatim: function () {},
      selectionStart: function () {},
      selectionEnd: function () {},
      x: function () {},
      y: function () {},
      width: function () {},
      height: function () {},
      setSuggestions: function () {},
      onchange: function () {},
      onsubmit: function () {},
      oncancel: function () {},
      onresize: function () {}
    },
    setSuggestResult: function () {},
    app:{
      isInstalled: function () {},
      install: function () {},
      getDetails: function () {},
      getDetailsForFrame: function () {}
    }
  },
  v8Locale: function () {},
  document:{
    doctype:{
      parentElement: function () {},
      nodeType: function () {},
      localName: function () {},
      prefix: function () {},
      ownerDocument: function () {},
      previousSibling: function () {},
      namespaceURI: function () {},
      lastChild: function () {},
      textContent: function () {},
      nextSibling: function () {},
      childNodes: function () {},
      name: function () {},
      baseURI: function () {},
      notations: function () {},
      firstChild: function () {},
      attributes: function () {},
      parentNode: function () {},
      internalSubset: function () {},
      systemId: function () {},
      nodeName: function () {},
      nodeValue: function () {},
      entities: function () {},
      publicId: function () {},
      insertBefore: function () {},
      replaceChild: function () {},
      removeChild: function () {},
      appendChild: function () {},
      hasChildNodes: function () {},
      cloneNode: function () {},
      normalize: function () {},
      isSupported: function () {},
      hasAttributes: function () {},
      lookupPrefix: function () {},
      isDefaultNamespace: function () {},
      lookupNamespaceURI: function () {},
      addEventListener: function () {},
      removeEventListener: function () {},
      isSameNode: function () {},
      isEqualNode: function () {},
      compareDocumentPosition: function () {},
      dispatchEvent: function () {},
      ELEMENT_NODE: function () {},
      ATTRIBUTE_NODE: function () {},
      TEXT_NODE: function () {},
      CDATA_SECTION_NODE: function () {},
      ENTITY_REFERENCE_NODE: function () {},
      ENTITY_NODE: function () {},
      PROCESSING_INSTRUCTION_NODE: function () {},
      COMMENT_NODE: function () {},
      DOCUMENT_NODE: function () {},
      DOCUMENT_TYPE_NODE: function () {},
      DOCUMENT_FRAGMENT_NODE: function () {},
      NOTATION_NODE: function () {},
      DOCUMENT_POSITION_DISCONNECTED: function () {},
      DOCUMENT_POSITION_PRECEDING: function () {},
      DOCUMENT_POSITION_FOLLOWING: function () {},
      DOCUMENT_POSITION_CONTAINS: function () {},
      DOCUMENT_POSITION_CONTAINED_BY: function () {},
      DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: function () {}
    },
    head:{
      clientLeft: function () {},
      scrollHeight: function () {},
      firstElementChild: function () {},
      offsetWidth: function () {},
      nodeType: function () {},
      isContentEditable: function () {},
      hidden: function () {},
      previousElementSibling: function () {},
      parentElement: function () {},
      children: function () {},
      webkitdropzone: function () {},
      localName: function () {},
      nodeValue: function () {},
      lastElementChild: function () {},
      offsetLeft: function () {},
      tagName: function () {},
      className: function () {},
      prefix: function () {},
      innerHTML: function () {},
      previousSibling: function () {},
      profile: function () {},
      namespaceURI: function () {},
      id: function () {},
      childElementCount: function () {},
      scrollLeft: function () {},
      clientHeight: function () {},
      lastChild: function () {},
      textContent: function () {},
      nextSibling: function () {},
      scrollWidth: function () {},
      offsetHeight: function () {},
      clientWidth: function () {},
      nodeName: function () {},
      style: function () {},
      lang: function () {},
      scrollTop: function () {},
      offsetTop: function () {},
      childNodes: function () {},
      baseURI: function () {},
      nextElementSibling: function () {},
      classList: function () {},
      title: function () {},
      firstChild: function () {},
      attributes: function () {},
      dataset: function () {},
      outerText: function () {},
      parentNode: function () {},
      clientTop: function () {},
      tabIndex: function () {},
      contentEditable: function () {},
      dir: function () {},
      outerHTML: function () {},
      innerText: function () {},
      ownerDocument: function () {},
      offsetParent: function () {},
      spellcheck: function () {},
      draggable: function () {},
      insertAdjacentHTML: function () {},
      insertAdjacentText: function () {},
      insertAdjacentElement: function () {},
      getAttribute: function () {},
      setAttribute: function () {},
      removeAttribute: function () {},
      getAttributeNode: function () {},
      getElementsByTagName: function () {},
      getAttributeNS: function () {},
      setAttributeNS: function () {},
      removeAttributeNS: function () {},
      getElementsByTagNameNS: function () {},
      getAttributeNodeNS: function () {},
      hasAttribute: function () {},
      hasAttributeNS: function () {},
      focus: function () {},
      blur: function () {},
      scrollIntoView: function () {},
      scrollIntoViewIfNeeded: function () {},
      scrollByLines: function () {},
      scrollByPages: function () {},
      getElementsByClassName: function () {},
      querySelector: function () {},
      querySelectorAll: function () {},
      webkitMatchesSelector: function () {},
      getClientRects: function () {},
      getBoundingClientRect: function () {},
      setAttributeNode: function () {},
      removeAttributeNode: function () {},
      setAttributeNodeNS: function () {},
      contains: function () {},
      insertBefore: function () {},
      replaceChild: function () {},
      removeChild: function () {},
      appendChild: function () {},
      hasChildNodes: function () {},
      cloneNode: function () {},
      normalize: function () {},
      isSupported: function () {},
      hasAttributes: function () {},
      lookupPrefix: function () {},
      isDefaultNamespace: function () {},
      lookupNamespaceURI: function () {},
      addEventListener: function () {},
      removeEventListener: function () {},
      isSameNode: function () {},
      isEqualNode: function () {},
      compareDocumentPosition: function () {},
      dispatchEvent: function () {},
      ELEMENT_NODE: function () {},
      ATTRIBUTE_NODE: function () {},
      TEXT_NODE: function () {},
      CDATA_SECTION_NODE: function () {},
      ENTITY_REFERENCE_NODE: function () {},
      ENTITY_NODE: function () {},
      PROCESSING_INSTRUCTION_NODE: function () {},
      COMMENT_NODE: function () {},
      DOCUMENT_NODE: function () {},
      DOCUMENT_TYPE_NODE: function () {},
      DOCUMENT_FRAGMENT_NODE: function () {},
      NOTATION_NODE: function () {},
      DOCUMENT_POSITION_DISCONNECTED: function () {},
      DOCUMENT_POSITION_PRECEDING: function () {},
      DOCUMENT_POSITION_FOLLOWING: function () {},
      DOCUMENT_POSITION_CONTAINS: function () {},
      DOCUMENT_POSITION_CONTAINED_BY: function () {},
      DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: function () {}
    },
    nodeType: 9,
    embeds:{
      length: function () {},
      item: function () {},
      namedItem: function () {}
    },
    linkColor: "",
    URL: "file://localhost/Users/jacob/workspace/play-jeesh/index.html",
    parentElement: function () {},
    bgColor: "",
    styleSheets:{
      length: function () {},
      item: function () {}
    },
    localName: function () {},
    referrer: "",
    ownerDocument: function () {},
    defaultCharset: "ISO-8859-1",
    nodeValue: function () {},
    documentURI: "file://localhost/Users/jacob/workspace/play-jeesh/index.html",
    height: 218,
    designMode: "off",
    readyState: "complete",
    lastModified: "06/20/2011 02:16:26",
    webkitVisibilityState: "visible",
    preferredStylesheetSet: function () {},
    prefix: function () {},
    width: 1280,
    xmlEncoding: function () {},
    characterSet: "ISO-8859-1",
    plugins:{
      length: function () {},
      item: function () {},
      namedItem: function () {}
    },
    anchors:{
      length: function () {},
      item: function () {},
      namedItem: function () {}
    },
    fgColor: "",
    namespaceURI: function () {},
    activeElement:{
      clientLeft: function () {},
      scrollHeight: function () {},
      firstElementChild: function () {},
      offsetWidth: function () {},
      nodeType: function () {},
      isContentEditable: function () {},
      hidden: function () {},
      previousElementSibling: function () {},
      parentElement: function () {},
      children: function () {},
      ownerDocument: function () {},
      bgColor: function () {},
      webkitdropzone: function () {},
      nodeValue: function () {},
      lastElementChild: function () {},
      offsetLeft: function () {},
      tagName: function () {},
      className: function () {},
      prefix: function () {},
      innerHTML: function () {},
      previousSibling: function () {},
      namespaceURI: function () {},
      id: function () {},
      childElementCount: function () {},
      scrollLeft: function () {},
      innerText: function () {},
      lastChild: function () {},
      clientHeight: function () {},
      aLink: function () {},
      textContent: function () {},
      nextSibling: function () {},
      scrollWidth: function () {},
      offsetHeight: function () {},
      clientWidth: function () {},
      nodeName: function () {},
      style: function () {},
      lang: function () {},
      scrollTop: function () {},
      offsetTop: function () {},
      childNodes: function () {},
      baseURI: function () {},
      link: function () {},
      nextElementSibling: function () {},
      classList: function () {},
      title: function () {},
      firstChild: function () {},
      attributes: function () {},
      dataset: function () {},
      outerText: function () {},
      parentNode: function () {},
      clientTop: function () {},
      tabIndex: function () {},
      background: function () {},
      contentEditable: function () {},
      dir: function () {},
      outerHTML: function () {},
      text: function () {},
      vLink: function () {},
      localName: function () {},
      offsetParent: function () {},
      spellcheck: function () {},
      draggable: function () {},
      insertAdjacentHTML: function () {},
      insertAdjacentText: function () {},
      insertAdjacentElement: function () {},
      getAttribute: function () {},
      setAttribute: function () {},
      removeAttribute: function () {},
      getAttributeNode: function () {},
      getElementsByTagName: function () {},
      getAttributeNS: function () {},
      setAttributeNS: function () {},
      removeAttributeNS: function () {},
      getElementsByTagNameNS: function () {},
      getAttributeNodeNS: function () {},
      hasAttribute: function () {},
      hasAttributeNS: function () {},
      focus: function () {},
      blur: function () {},
      scrollIntoView: function () {},
      scrollIntoViewIfNeeded: function () {},
      scrollByLines: function () {},
      scrollByPages: function () {},
      getElementsByClassName: function () {},
      querySelector: function () {},
      querySelectorAll: function () {},
      webkitMatchesSelector: function () {},
      getClientRects: function () {},
      getBoundingClientRect: function () {},
      setAttributeNode: function () {},
      removeAttributeNode: function () {},
      setAttributeNodeNS: function () {},
      contains: function () {},
      insertBefore: function () {},
      replaceChild: function () {},
      removeChild: function () {},
      appendChild: function () {},
      hasChildNodes: function () {},
      cloneNode: function () {},
      normalize: function () {},
      isSupported: function () {},
      hasAttributes: function () {},
      lookupPrefix: function () {},
      isDefaultNamespace: function () {},
      lookupNamespaceURI: function () {},
      addEventListener: function () {},
      removeEventListener: function () {},
      isSameNode: function () {},
      isEqualNode: function () {},
      compareDocumentPosition: function () {},
      dispatchEvent: function () {},
      ELEMENT_NODE: function () {},
      ATTRIBUTE_NODE: function () {},
      TEXT_NODE: function () {},
      CDATA_SECTION_NODE: function () {},
      ENTITY_REFERENCE_NODE: function () {},
      ENTITY_NODE: function () {},
      PROCESSING_INSTRUCTION_NODE: function () {},
      COMMENT_NODE: function () {},
      DOCUMENT_NODE: function () {},
      DOCUMENT_TYPE_NODE: function () {},
      DOCUMENT_FRAGMENT_NODE: function () {},
      NOTATION_NODE: function () {},
      DOCUMENT_POSITION_DISCONNECTED: function () {},
      DOCUMENT_POSITION_PRECEDING: function () {},
      DOCUMENT_POSITION_FOLLOWING: function () {},
      DOCUMENT_POSITION_CONTAINS: function () {},
      DOCUMENT_POSITION_CONTAINED_BY: function () {},
      DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: function () {}
    },
    lastChild:{
      clientLeft: function () {},
      scrollHeight: function () {},
      firstElementChild: function () {},
      offsetWidth: function () {},
      nodeType: function () {},
      isContentEditable: function () {},
      hidden: function () {},
      previousElementSibling: function () {},
      parentElement: function () {},
      children: function () {},
      webkitdropzone: function () {},
      localName: function () {},
      nodeValue: function () {},
      lastElementChild: function () {},
      offsetLeft: function () {},
      tagName: function () {},
      className: function () {},
      prefix: function () {},
      innerHTML: function () {},
      previousSibling: function () {},
      namespaceURI: function () {},
      id: function () {},
      childElementCount: function () {},
      scrollLeft: function () {},
      lastChild: function () {},
      textContent: function () {},
      innerText: function () {},
      nextSibling: function () {},
      scrollWidth: function () {},
      manifest: function () {},
      offsetHeight: function () {},
      version: function () {},
      clientWidth: function () {},
      nodeName: function () {},
      style: function () {},
      lang: function () {},
      scrollTop: function () {},
      offsetTop: function () {},
      childNodes: function () {},
      baseURI: function () {},
      nextElementSibling: function () {},
      classList: function () {},
      title: function () {},
      firstChild: function () {},
      attributes: function () {},
      dataset: function () {},
      outerText: function () {},
      parentNode: function () {},
      clientTop: function () {},
      tabIndex: function () {},
      contentEditable: function () {},
      dir: function () {},
      outerHTML: function () {},
      clientHeight: function () {},
      ownerDocument: function () {},
      offsetParent: function () {},
      spellcheck: function () {},
      draggable: function () {},
      insertAdjacentHTML: function () {},
      insertAdjacentText: function () {},
      insertAdjacentElement: function () {},
      getAttribute: function () {},
      setAttribute: function () {},
      removeAttribute: function () {},
      getAttributeNode: function () {},
      getElementsByTagName: function () {},
      getAttributeNS: function () {},
      setAttributeNS: function () {},
      removeAttributeNS: function () {},
      getElementsByTagNameNS: function () {},
      getAttributeNodeNS: function () {},
      hasAttribute: function () {},
      hasAttributeNS: function () {},
      focus: function () {},
      blur: function () {},
      scrollIntoView: function () {},
      scrollIntoViewIfNeeded: function () {},
      scrollByLines: function () {},
      scrollByPages: function () {},
      getElementsByClassName: function () {},
      querySelector: function () {},
      querySelectorAll: function () {},
      webkitMatchesSelector: function () {},
      getClientRects: function () {},
      getBoundingClientRect: function () {},
      setAttributeNode: function () {},
      removeAttributeNode: function () {},
      setAttributeNodeNS: function () {},
      contains: function () {},
      insertBefore: function () {},
      replaceChild: function () {},
      removeChild: function () {},
      appendChild: function () {},
      hasChildNodes: function () {},
      cloneNode: function () {},
      normalize: function () {},
      isSupported: function () {},
      hasAttributes: function () {},
      lookupPrefix: function () {},
      isDefaultNamespace: function () {},
      lookupNamespaceURI: function () {},
      addEventListener: function () {},
      removeEventListener: function () {},
      isSameNode: function () {},
      isEqualNode: function () {},
      compareDocumentPosition: function () {},
      dispatchEvent: function () {},
      ELEMENT_NODE: function () {},
      ATTRIBUTE_NODE: function () {},
      TEXT_NODE: function () {},
      CDATA_SECTION_NODE: function () {},
      ENTITY_REFERENCE_NODE: function () {},
      ENTITY_NODE: function () {},
      PROCESSING_INSTRUCTION_NODE: function () {},
      COMMENT_NODE: function () {},
      DOCUMENT_NODE: function () {},
      DOCUMENT_TYPE_NODE: function () {},
      DOCUMENT_FRAGMENT_NODE: function () {},
      NOTATION_NODE: function () {},
      DOCUMENT_POSITION_DISCONNECTED: function () {},
      DOCUMENT_POSITION_PRECEDING: function () {},
      DOCUMENT_POSITION_FOLLOWING: function () {},
      DOCUMENT_POSITION_CONTAINS: function () {},
      DOCUMENT_POSITION_CONTAINED_BY: function () {},
      DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: function () {}
    },
    xmlStandalone: false,
    textContent: function () {},
    nextSibling: function () {},
    domain: "localhost",
    applets:{
      length: function () {},
      item: function () {},
      namedItem: function () {}
    },
    charset: "ISO-8859-1",
    nodeName: "#document",
    cookie: "",
    childNodes:{
      0: function () {},
      1: function () {},
      length: function () {},
      item: function () {}
    },
    baseURI: "file://localhost/Users/jacob/workspace/play-jeesh/index.html",
    inputEncoding: "ISO-8859-1",
    implementation:{
      hasFeature: function () {},
      createDocumentType: function () {},
      createCSSStyleSheet: function () {},
      createHTMLDocument: function () {},
      createDocument: function () {}
    },
    compatMode: "CSS1Compat",
    links:{
      length: function () {},
      item: function () {},
      namedItem: function () {}
    },
    title: "",
    firstChild:{
      parentElement: function () {},
      nodeType: function () {},
      localName: function () {},
      prefix: function () {},
      ownerDocument: function () {},
      previousSibling: function () {},
      namespaceURI: function () {},
      lastChild: function () {},
      textContent: function () {},
      nextSibling: function () {},
      childNodes: function () {},
      name: function () {},
      baseURI: function () {},
      notations: function () {},
      firstChild: function () {},
      attributes: function () {},
      parentNode: function () {},
      internalSubset: function () {},
      systemId: function () {},
      nodeName: function () {},
      nodeValue: function () {},
      entities: function () {},
      publicId: function () {},
      insertBefore: function () {},
      replaceChild: function () {},
      removeChild: function () {},
      appendChild: function () {},
      hasChildNodes: function () {},
      cloneNode: function () {},
      normalize: function () {},
      isSupported: function () {},
      hasAttributes: function () {},
      lookupPrefix: function () {},
      isDefaultNamespace: function () {},
      lookupNamespaceURI: function () {},
      addEventListener: function () {},
      removeEventListener: function () {},
      isSameNode: function () {},
      isEqualNode: function () {},
      compareDocumentPosition: function () {},
      dispatchEvent: function () {},
      ELEMENT_NODE: function () {},
      ATTRIBUTE_NODE: function () {},
      TEXT_NODE: function () {},
      CDATA_SECTION_NODE: function () {},
      ENTITY_REFERENCE_NODE: function () {},
      ENTITY_NODE: function () {},
      PROCESSING_INSTRUCTION_NODE: function () {},
      COMMENT_NODE: function () {},
      DOCUMENT_NODE: function () {},
      DOCUMENT_TYPE_NODE: function () {},
      DOCUMENT_FRAGMENT_NODE: function () {},
      NOTATION_NODE: function () {},
      DOCUMENT_POSITION_DISCONNECTED: function () {},
      DOCUMENT_POSITION_PRECEDING: function () {},
      DOCUMENT_POSITION_FOLLOWING: function () {},
      DOCUMENT_POSITION_CONTAINS: function () {},
      DOCUMENT_POSITION_CONTAINED_BY: function () {},
      DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: function () {}
    },
    attributes: function () {},
    defaultView:{
      location: function () {},
      external: function () {},
      chrome: function () {},
      v8Locale: function () {},
      document: function () {},
      newLine: function () {},
      times: function () {},
      getProperties: function () {},
      SVGPathSegLinetoVerticalRel: function () {},
      SVGFESpotLightElement: function () {},
      HTMLButtonElement: function () {},
      Worker: function () {},
      webkitIDBTransaction: function () {},
      webkitNotifications: function () {},
      EntityReference: function () {},
      NodeList: function () {},
      screenY: function () {},
      SVGAnimatedNumber: function () {},
      SVGTSpanElement: function () {},
      navigator: function () {},
      MimeTypeArray: function () {},
      sessionStorage: function () {},
      SVGPoint: function () {},
      SVGScriptElement: function () {},
      OverflowEvent: function () {},
      HTMLTableColElement: function () {},
      HTMLOptionElement: function () {},
      HTMLInputElement: function () {},
      webkitIDBIndex: function () {},
      SVGFEPointLightElement: function () {},
      SVGPathSegList: function () {},
      SVGImageElement: function () {},
      defaultStatus: function () {},
      MutationEvent: function () {},
      SVGMarkerElement: function () {},
      HTMLMetaElement: function () {},
      WebKitCSSTransformValue: function () {},
      Clipboard: function () {},
      HTMLTableElement: function () {},
      SharedWorker: function () {},
      SVGAElement: function () {},
      SVGAnimatedRect: function () {},
      webkitIDBDatabaseError: function () {},
      SVGGElement: function () {},
      toolbar: function () {},
      SVGLinearGradientElement: function () {},
      innerHeight: function () {},
      webkitIndexedDB: function () {},
      SVGForeignObjectElement: function () {},
      SVGAnimateElement: function () {},
      applicationCache: function () {},
      SVGFontElement: function () {},
      pageXOffset: function () {},
      SVGFontFaceElement: function () {},
      Element: function () {},
      SVGPathSegCurvetoQuadraticSmoothRel: function () {},
      opener: function () {},
      SVGStopElement: function () {},
      Float64Array: function () {},
      CSSStyleSheet: function () {},
      StyleSheetList: function () {},
      WebGLShader: function () {},
      Uint32Array: function () {},
      TimeRanges: function () {},
      screenLeft: function () {},
      HTMLHRElement: function () {},
      SVGViewElement: function () {},
      SVGGradientElement: function () {},
      SVGPathSegMovetoRel: function () {},
      CanvasPattern: function () {},
      WebGLActiveInfo: function () {},
      HTMLProgressElement: function () {},
      HTMLDivElement: function () {},
      HashChangeEvent: function () {},
      KeyboardEvent: function () {},
      SVGHKernElement: function () {},
      HTMLTitleElement: function () {},
      HTMLQuoteElement: function () {},
      webkitIDBDatabaseException: function () {},
      SVGFEImageElement: function () {},
      DOMTokenList: function () {},
      screenX: function () {},
      WebGLProgram: function () {},
      SVGPathSegMovetoAbs: function () {},
      RangeException: function () {},
      SVGTextPathElement: function () {},
      SVGAnimatedTransformList: function () {},
      webkitIDBFactory: function () {},
      HTMLLegendElement: function () {},
      SVGPathSegCurvetoQuadraticAbs: function () {},
      MouseEvent: function () {},
      MediaError: function () {},
      Uint16Array: function () {},
      HTMLObjectElement: function () {},
      HTMLFontElement: function () {},
      SVGFilterElement: function () {},
      WebKitTransitionEvent: function () {},
      MediaList: function () {},
      SVGVKernElement: function () {},
      SVGPaint: function () {},
      SVGFETileElement: function () {},
      Document: function () {},
      XPathException: function () {},
      innerWidth: function () {},
      TextMetrics: function () {},
      personalbar: function () {},
      HTMLHeadElement: function () {},
      SVGFEComponentTransferElement: function () {},
      ProgressEvent: function () {},
      SVGAnimatedPreserveAspectRatio: function () {},
      Node: function () {},
      SVGRectElement: function () {},
      CSSPageRule: function () {},
      SVGLineElement: function () {},
      CharacterData: function () {},
      length: function () {},
      FileError: function () {},
      SVGDocument: function () {},
      MessagePort: function () {},
      ClientRect: function () {},
      Option: function () {},
      SVGDescElement: function () {},
      Notation: function () {},
      WebGLBuffer: function () {},
      StorageEvent: function () {},
      HTMLFieldSetElement: function () {},
      HTMLVideoElement: function () {},
      SVGPathSegLinetoRel: function () {},
      locationbar: function () {},
      WebGLTexture: function () {},
      webkitAudioPannerNode: function () {},
      UIEvent: function () {},
      HTMLTableRowElement: function () {},
      HTMLDListElement: function () {},
      File: function () {},
      SVGEllipseElement: function () {},
      SVGFEFuncRElement: function () {},
      Int32Array: function () {},
      HTMLAllCollection: function () {},
      CSSValue: function () {},
      SVGAnimatedNumberList: function () {},
      HTMLParamElement: function () {},
      SVGElementInstance: function () {},
      HTMLModElement: function () {},
      scrollY: function () {},
      SVGPathSegLinetoHorizontalRel: function () {},
      outerHeight: function () {},
      CSSFontFaceRule: function () {},
      SVGPathSeg: function () {},
      CSSStyleDeclaration: function () {},
      WebSocket: function () {},
      TouchEvent: function () {},
      Rect: function () {},
      StyleSheet: function () {},
      SVGPathSegLinetoHorizontalAbs: function () {},
      SVGColor: function () {},
      ArrayBuffer: function () {},
      SVGComponentTransferFunctionElement: function () {},
      SVGStyleElement: function () {},
      Int16Array: function () {},
      HTMLOutputElement: function () {},
      SVGNumberList: function () {},
      DataView: function () {},
      DeviceOrientationEvent: function () {},
      Blob: function () {},
      SVGFEFloodElement: function () {},
      clientInformation: function () {},
      CloseEvent: function () {},
      webkitStorageInfo: function () {},
      HTMLStyleElement: function () {},
      HTMLBaseElement: function () {},
      HTMLBRElement: function () {},
      FileReader: function () {},
      SVGFEBlendElement: function () {},
      HTMLHtmlElement: function () {},
      SVGFEConvolveMatrixElement: function () {},
      SVGFEGaussianBlurElement: function () {},
      HTMLTextAreaElement: function () {},
      HTMLBaseFontElement: function () {},
      scrollbars: function () {},
      webkitIDBCursor: function () {},
      screen: function () {},
      localStorage: function () {},
      defaultstatus: function () {},
      WebGLRenderbuffer: function () {},
      SVGTextElement: function () {},
      SVGFEOffsetElement: function () {},
      RGBColor: function () {},
      SVGGlyphElement: function () {},
      Float32Array: function () {},
      HTMLCanvasElement: function () {},
      ProcessingInstruction: function () {},
      SVGZoomEvent: function () {},
      HTMLFrameElement: function () {},
      SVGElementInstanceList: function () {},
      SVGFEDisplacementMapElement: function () {},
      SVGPathSegCurvetoCubicSmoothRel: function () {},
      HTMLElement: function () {},
      HTMLSelectElement: function () {},
      Int8Array: function () {},
      SVGFEDistantLightElement: function () {},
      ImageData: function () {},
      SVGFEFuncBElement: function () {},
      HTMLIsIndexElement: function () {},
      HTMLDocument: function () {},
      SVGCircleElement: function () {},
      HTMLCollection: function () {},
      SVGSetElement: function () {},
      SVGFEMergeElement: function () {},
      HTMLDirectoryElement: function () {},
      CSSMediaRule: function () {},
      MessageEvent: function () {},
      SVGFESpecularLightingElement: function () {},
      DOMException: function () {},
      SVGNumber: function () {},
      SVGFontFaceSrcElement: function () {},
      CSSRule: function () {},
      SVGElement: function () {},
      WebKitCSSMatrix: function () {},
      status: function () {},
      SVGMissingGlyphElement: function () {},
      HTMLScriptElement: function () {},
      DOMImplementation: function () {},
      SVGLength: function () {},
      HTMLOptGroupElement: function () {},
      SVGPathSegLinetoVerticalAbs: function () {},
      SVGTextPositioningElement: function () {},
      HTMLKeygenElement: function () {},
      styleMedia: function () {},
      SVGFEFuncGElement: function () {},
      HTMLAreaElement: function () {},
      HTMLFrameSetElement: function () {},
      SVGPathSegCurvetoQuadraticRel: function () {},
      name: function () {},
      HTMLIFrameElement: function () {},
      Comment: function () {},
      Event: function () {},
      Storage: function () {},
      XMLSerializer: function () {},
      performance: function () {},
      statusbar: function () {},
      Range: function () {},
      HTMLPreElement: function () {},
      DOMStringList: function () {},
      Image: function () {},
      SVGPathSegCurvetoQuadraticSmoothAbs: function () {},
      SVGRect: function () {},
      SVGFontFaceFormatElement: function () {},
      closed: function () {},
      crypto: function () {},
      SVGAnimateTransformElement: function () {},
      HTMLFormElement: function () {},
      webkitIDBDatabase: function () {},
      SVGPathSegCurvetoCubicSmoothAbs: function () {},
      DOMParser: function () {},
      SVGPathSegClosePath: function () {},
      console: function () {},
      SVGPathSegArcRel: function () {},
      EventException: function () {},
      SVGAnimatedString: function () {},
      SVGTransformList: function () {},
      webkitIDBRequest: function () {},
      SVGFEMorphologyElement: function () {},
      SVGAnimatedLength: function () {},
      SVGPolygonElement: function () {},
      scrollX: function () {},
      SVGPathSegLinetoAbs: function () {},
      WebKitFlags: function () {},
      HTMLMediaElement: function () {},
      XMLDocument: function () {},
      webkitIDBObjectStore: function () {},
      SVGMaskElement: function () {},
      HTMLHeadingElement: function () {},
      XMLHttpRequest: function () {},
      TextEvent: function () {},
      event: function () {},
      HTMLMeterElement: function () {},
      SVGPathElement: function () {},
      SVGStringList: function () {},
      HTMLAppletElement: function () {},
      devicePixelRatio: function () {},
      FileList: function () {},
      webkitURL: function () {},
      CanvasRenderingContext2D: function () {},
      MessageChannel: function () {},
      SVGFEDropShadowElement: function () {},
      WebGLRenderingContext: function () {},
      webkitIDBKeyRange: function () {},
      HTMLMarqueeElement: function () {},
      WebKitCSSKeyframesRule: function () {},
      XSLTProcessor: function () {},
      CSSImportRule: function () {},
      BeforeLoadEvent: function () {},
      PageTransitionEvent: function () {},
      CSSRuleList: function () {},
      SVGAnimatedLengthList: function () {},
      SVGTransform: function () {},
      SVGTextContentElement: function () {},
      HTMLTableSectionElement: function () {},
      SVGRadialGradientElement: function () {},
      HTMLTableCellElement: function () {},
      SVGCursorElement: function () {},
      DocumentFragment: function () {},
      SVGPathSegCurvetoCubicAbs: function () {},
      SVGUseElement: function () {},
      FormData: function () {},
      SVGPreserveAspectRatio: function () {},
      HTMLMapElement: function () {},
      XPathResult: function () {},
      HTMLLIElement: function () {},
      SVGSwitchElement: function () {},
      SVGLengthList: function () {},
      Plugin: function () {},
      HTMLParagraphElement: function () {},
      HTMLBlockquoteElement: function () {},
      SVGPathSegArcAbs: function () {},
      SVGAnimatedBoolean: function () {},
      outerWidth: function () {},
      CSSStyleRule: function () {},
      SVGFontFaceUriElement: function () {},
      Text: function () {},
      HTMLUListElement: function () {},
      WebGLUniformLocation: function () {},
      SVGPointList: function () {},
      CSSPrimitiveValue: function () {},
      HTMLEmbedElement: function () {},
      PluginArray: function () {},
      SVGPathSegCurvetoCubicRel: function () {},
      ClientRectList: function () {},
      SVGMetadataElement: function () {},
      SVGTitleElement: function () {},
      SVGAnimatedAngle: function () {},
      CSSCharsetRule: function () {},
      menubar: function () {},
      SVGAnimateColorElement: function () {},
      SVGMatrix: function () {},
      HTMLBodyElement: function () {},
      SVGSymbolElement: function () {},
      HTMLAudioElement: function () {},
      CDATASection: function () {},
      SVGFEDiffuseLightingElement: function () {},
      SVGFETurbulenceElement: function () {},
      WebKitBlobBuilder: function () {},
      SVGAnimatedEnumeration: function () {},
      WebKitCSSKeyframeRule: function () {},
      Audio: function () {},
      SVGFEMergeNodeElement: function () {},
      history: function () {},
      Entity: function () {},
      SQLException: function () {},
      HTMLTableCaptionElement: function () {},
      DOMStringMap: function () {},
      MimeType: function () {},
      EventSource: function () {},
      SVGException: function () {},
      NamedNodeMap: function () {},
      WebGLFramebuffer: function () {},
      XMLHttpRequestUpload: function () {},
      WebKitAnimationEvent: function () {},
      Uint8Array: function () {},
      SVGAnimatedInteger: function () {},
      HTMLMenuElement: function () {},
      SVGDefsElement: function () {},
      SVGAngle: function () {},
      SVGSVGElement: function () {},
      XPathEvaluator: function () {},
      HTMLImageElement: function () {},
      NodeFilter: function () {},
      SVGAltGlyphElement: function () {},
      SVGClipPathElement: function () {},
      Attr: function () {},
      Counter: function () {},
      SVGPolylineElement: function () {},
      DOMSettableTokenList: function () {},
      SVGPatternElement: function () {},
      SVGFECompositeElement: function () {},
      CSSValueList: function () {},
      XMLHttpRequestException: function () {},
      SVGFEColorMatrixElement: function () {},
      SVGTRefElement: function () {},
      WheelEvent: function () {},
      SVGUnitTypes: function () {},
      HTMLLabelElement: function () {},
      HTMLAnchorElement: function () {},
      SVGFEFuncAElement: function () {},
      CanvasGradient: function () {},
      frameElement: function () {},
      DocumentType: function () {},
      HTMLOListElement: function () {},
      SVGRenderingIntent: function () {},
      WebKitPoint: function () {},
      HTMLLinkElement: function () {},
      offscreenBuffering: function () {},
      pageYOffset: function () {},
      SVGFontFaceNameElement: function () {},
      screenTop: function () {},
      onseeked: function () {},
      onkeypress: function () {},
      onwebkitanimationend: function () {},
      onmouseup: function () {},
      onemptied: function () {},
      onseeking: function () {},
      onclick: function () {},
      onmousedown: function () {},
      onwebkitanimationiteration: function () {},
      onpopstate: function () {},
      onmessage: function () {},
      onunload: function () {},
      onmouseover: function () {},
      blur: function () {},
      ontimeupdate: function () {},
      onstalled: function () {},
      onvolumechange: function () {},
      ondragenter: function () {},
      ondurationchange: function () {},
      onwaiting: function () {},
      ondragstart: function () {},
      onstorage: function () {},
      ononline: function () {},
      onbeforeunload: function () {},
      onplay: function () {},
      onloadstart: function () {},
      onsuspend: function () {},
      ondrag: function () {},
      onscroll: function () {},
      ondblclick: function () {},
      ondragend: function () {},
      onloadedmetadata: function () {},
      onpagehide: function () {},
      onmousewheel: function () {},
      onreset: function () {},
      onpageshow: function () {},
      onpause: function () {},
      onmouseout: function () {},
      oninvalid: function () {},
      close: function () {},
      onsubmit: function () {},
      oncontextmenu: function () {},
      onoffline: function () {},
      onload: function () {},
      ondragleave: function () {},
      onkeyup: function () {},
      onkeydown: function () {},
      oncanplay: function () {},
      oncanplaythrough: function () {},
      ondrop: function () {},
      ondragover: function () {},
      onratechange: function () {},
      onerror: function () {},
      onloadeddata: function () {},
      onwebkitanimationstart: function () {},
      onabort: function () {},
      onselect: function () {},
      onplaying: function () {},
      ondeviceorientation: function () {},
      focus: function () {},
      onsearch: function () {},
      onhashchange: function () {},
      onended: function () {},
      onmousemove: function () {},
      onwebkittransitionend: function () {},
      postMessage: function () {},
      onchange: function () {},
      onprogress: function () {},
      oninput: function () {},
      onblur: function () {},
      onresize: function () {},
      onfocus: function () {},
      getSelection: function () {},
      print: function () {},
      stop: function () {},
      open: function () {},
      showModalDialog: function () {},
      alert: function () {},
      confirm: function () {},
      prompt: function () {},
      find: function () {},
      scrollBy: function () {},
      scrollTo: function () {},
      scroll: function () {},
      moveBy: function () {},
      moveTo: function () {},
      resizeBy: function () {},
      resizeTo: function () {},
      matchMedia: function () {},
      setTimeout: function () {},
      clearTimeout: function () {},
      setInterval: function () {},
      clearInterval: function () {},
      webkitRequestAnimationFrame: function () {},
      webkitCancelRequestAnimationFrame: function () {},
      atob: function () {},
      btoa: function () {},
      addEventListener: function () {},
      removeEventListener: function () {},
      captureEvents: function () {},
      releaseEvents: function () {},
      getComputedStyle: function () {},
      getMatchedCSSRules: function () {},
      webkitConvertPointFromPageToNode: function () {},
      webkitConvertPointFromNodeToPage: function () {},
      openDatabase: function () {},
      webkitRequestFileSystem: function () {},
      webkitResolveLocalFileSystemURL: function () {},
      dispatchEvent: function () {},
      TEMPORARY: function () {},
      PERSISTENT: function () {}
    },
    vlinkColor: "",
    xmlVersion: function () {},
    selectedStylesheetSet: function () {},
    alinkColor: "",
    parentNode: function () {},
    webkitHidden: false,
    location:{
      replace: function () {},
      origin: function () {},
      assign: function () {},
      pathname: function () {},
      host: function () {},
      hostname: function () {},
      port: function () {},
      search: function () {},
      hash: function () {},
      reload: function () {},
      href: function () {},
      protocol: function () {},
      getParameter: function () {}
    },
    dir: "",
    scripts:{
      length: function () {},
      item: function () {},
      namedItem: function () {}
    },
    documentElement:{
      clientLeft: function () {},
      scrollHeight: function () {},
      firstElementChild: function () {},
      offsetWidth: function () {},
      nodeType: function () {},
      isContentEditable: function () {},
      hidden: function () {},
      previousElementSibling: function () {},
      parentElement: function () {},
      children: function () {},
      webkitdropzone: function () {},
      localName: function () {},
      nodeValue: function () {},
      lastElementChild: function () {},
      offsetLeft: function () {},
      tagName: function () {},
      className: function () {},
      prefix: function () {},
      innerHTML: function () {},
      previousSibling: function () {},
      namespaceURI: function () {},
      id: function () {},
      childElementCount: function () {},
      scrollLeft: function () {},
      lastChild: function () {},
      textContent: function () {},
      innerText: function () {},
      nextSibling: function () {},
      scrollWidth: function () {},
      manifest: function () {},
      offsetHeight: function () {},
      version: function () {},
      clientWidth: function () {},
      nodeName: function () {},
      style: function () {},
      lang: function () {},
      scrollTop: function () {},
      offsetTop: function () {},
      childNodes: function () {},
      baseURI: function () {},
      nextElementSibling: function () {},
      classList: function () {},
      title: function () {},
      firstChild: function () {},
      attributes: function () {},
      dataset: function () {},
      outerText: function () {},
      parentNode: function () {},
      clientTop: function () {},
      tabIndex: function () {},
      contentEditable: function () {},
      dir: function () {},
      outerHTML: function () {},
      clientHeight: function () {},
      ownerDocument: function () {},
      offsetParent: function () {},
      spellcheck: function () {},
      draggable: function () {},
      insertAdjacentHTML: function () {},
      insertAdjacentText: function () {},
      insertAdjacentElement: function () {},
      getAttribute: function () {},
      setAttribute: function () {},
      removeAttribute: function () {},
      getAttributeNode: function () {},
      getElementsByTagName: function () {},
      getAttributeNS: function () {},
      setAttributeNS: function () {},
      removeAttributeNS: function () {},
      getElementsByTagNameNS: function () {},
      getAttributeNodeNS: function () {},
      hasAttribute: function () {},
      hasAttributeNS: function () {},
      focus: function () {},
      blur: function () {},
      scrollIntoView: function () {},
      scrollIntoViewIfNeeded: function () {},
      scrollByLines: function () {},
      scrollByPages: function () {},
      getElementsByClassName: function () {},
      querySelector: function () {},
      querySelectorAll: function () {},
      webkitMatchesSelector: function () {},
      getClientRects: function () {},
      getBoundingClientRect: function () {},
      setAttributeNode: function () {},
      removeAttributeNode: function () {},
      setAttributeNodeNS: function () {},
      contains: function () {},
      insertBefore: function () {},
      replaceChild: function () {},
      removeChild: function () {},
      appendChild: function () {},
      hasChildNodes: function () {},
      cloneNode: function () {},
      normalize: function () {},
      isSupported: function () {},
      hasAttributes: function () {},
      lookupPrefix: function () {},
      isDefaultNamespace: function () {},
      lookupNamespaceURI: function () {},
      addEventListener: function () {},
      removeEventListener: function () {},
      isSameNode: function () {},
      isEqualNode: function () {},
      compareDocumentPosition: function () {},
      dispatchEvent: function () {},
      ELEMENT_NODE: function () {},
      ATTRIBUTE_NODE: function () {},
      TEXT_NODE: function () {},
      CDATA_SECTION_NODE: function () {},
      ENTITY_REFERENCE_NODE: function () {},
      ENTITY_NODE: function () {},
      PROCESSING_INSTRUCTION_NODE: function () {},
      COMMENT_NODE: function () {},
      DOCUMENT_NODE: function () {},
      DOCUMENT_TYPE_NODE: function () {},
      DOCUMENT_FRAGMENT_NODE: function () {},
      NOTATION_NODE: function () {},
      DOCUMENT_POSITION_DISCONNECTED: function () {},
      DOCUMENT_POSITION_PRECEDING: function () {},
      DOCUMENT_POSITION_FOLLOWING: function () {},
      DOCUMENT_POSITION_CONTAINS: function () {},
      DOCUMENT_POSITION_CONTAINED_BY: function () {},
      DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: function () {}
    },
    previousSibling: function () {},
    forms:{
      length: function () {},
      item: function () {},
      namedItem: function () {}
    },
    body:{
      clientLeft: function () {},
      scrollHeight: function () {},
      firstElementChild: function () {},
      offsetWidth: function () {},
      nodeType: function () {},
      isContentEditable: function () {},
      hidden: function () {},
      previousElementSibling: function () {},
      parentElement: function () {},
      children: function () {},
      ownerDocument: function () {},
      bgColor: function () {},
      webkitdropzone: function () {},
      nodeValue: function () {},
      lastElementChild: function () {},
      offsetLeft: function () {},
      tagName: function () {},
      className: function () {},
      prefix: function () {},
      innerHTML: function () {},
      previousSibling: function () {},
      namespaceURI: function () {},
      id: function () {},
      childElementCount: function () {},
      scrollLeft: function () {},
      innerText: function () {},
      lastChild: function () {},
      clientHeight: function () {},
      aLink: function () {},
      textContent: function () {},
      nextSibling: function () {},
      scrollWidth: function () {},
      offsetHeight: function () {},
      clientWidth: function () {},
      nodeName: function () {},
      style: function () {},
      lang: function () {},
      scrollTop: function () {},
      offsetTop: function () {},
      childNodes: function () {},
      baseURI: function () {},
      link: function () {},
      nextElementSibling: function () {},
      classList: function () {},
      title: function () {},
      firstChild: function () {},
      attributes: function () {},
      dataset: function () {},
      outerText: function () {},
      parentNode: function () {},
      clientTop: function () {},
      tabIndex: function () {},
      background: function () {},
      contentEditable: function () {},
      dir: function () {},
      outerHTML: function () {},
      text: function () {},
      vLink: function () {},
      localName: function () {},
      offsetParent: function () {},
      spellcheck: function () {},
      draggable: function () {},
      insertAdjacentHTML: function () {},
      insertAdjacentText: function () {},
      insertAdjacentElement: function () {},
      getAttribute: function () {},
      setAttribute: function () {},
      removeAttribute: function () {},
      getAttributeNode: function () {},
      getElementsByTagName: function () {},
      getAttributeNS: function () {},
      setAttributeNS: function () {},
      removeAttributeNS: function () {},
      getElementsByTagNameNS: function () {},
      getAttributeNodeNS: function () {},
      hasAttribute: function () {},
      hasAttributeNS: function () {},
      focus: function () {},
      blur: function () {},
      scrollIntoView: function () {},
      scrollIntoViewIfNeeded: function () {},
      scrollByLines: function () {},
      scrollByPages: function () {},
      getElementsByClassName: function () {},
      querySelector: function () {},
      querySelectorAll: function () {},
      webkitMatchesSelector: function () {},
      getClientRects: function () {},
      getBoundingClientRect: function () {},
      setAttributeNode: function () {},
      removeAttributeNode: function () {},
      setAttributeNodeNS: function () {},
      contains: function () {},
      insertBefore: function () {},
      replaceChild: function () {},
      removeChild: function () {},
      appendChild: function () {},
      hasChildNodes: function () {},
      cloneNode: function () {},
      normalize: function () {},
      isSupported: function () {},
      hasAttributes: function () {},
      lookupPrefix: function () {},
      isDefaultNamespace: function () {},
      lookupNamespaceURI: function () {},
      addEventListener: function () {},
      removeEventListener: function () {},
      isSameNode: function () {},
      isEqualNode: function () {},
      compareDocumentPosition: function () {},
      dispatchEvent: function () {},
      ELEMENT_NODE: function () {},
      ATTRIBUTE_NODE: function () {},
      TEXT_NODE: function () {},
      CDATA_SECTION_NODE: function () {},
      ENTITY_REFERENCE_NODE: function () {},
      ENTITY_NODE: function () {},
      PROCESSING_INSTRUCTION_NODE: function () {},
      COMMENT_NODE: function () {},
      DOCUMENT_NODE: function () {},
      DOCUMENT_TYPE_NODE: function () {},
      DOCUMENT_FRAGMENT_NODE: function () {},
      NOTATION_NODE: function () {},
      DOCUMENT_POSITION_DISCONNECTED: function () {},
      DOCUMENT_POSITION_PRECEDING: function () {},
      DOCUMENT_POSITION_FOLLOWING: function () {},
      DOCUMENT_POSITION_CONTAINS: function () {},
      DOCUMENT_POSITION_CONTAINED_BY: function () {},
      DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: function () {}
    },
    all: [object HTMLAllCollection],
    images:{
      length: function () {},
      item: function () {},
      namedItem: function () {}
    },
    open: function () {},
    close: function () {},
    write: function () {},
    writeln: function () {},
    clear: function () {},
    captureEvents: function () {},
    releaseEvents: function () {},
    hasFocus: function () {},
    createElement: function () {},
    createDocumentFragment: function () {},
    createTextNode: function () {},
    createComment: function () {},
    createCDATASection: function () {},
    createProcessingInstruction: function () {},
    createAttribute: function () {},
    createEntityReference: function () {},
    getElementsByTagName: function () {},
    createElementNS: function () {},
    createAttributeNS: function () {},
    getElementsByTagNameNS: function () {},
    getElementById: function () {},
    createEvent: function () {},
    createRange: function () {},
    evaluate: function () {},
    execCommand: function () {},
    queryCommandEnabled: function () {},
    queryCommandIndeterm: function () {},
    queryCommandState: function () {},
    queryCommandSupported: function () {},
    queryCommandValue: function () {},
    getElementsByName: function () {},
    elementFromPoint: function () {},
    caretRangeFromPoint: function () {},
    getSelection: function () {},
    getCSSCanvasContext: function () {},
    getElementsByClassName: function () {},
    querySelector: function () {},
    querySelectorAll: function () {},
    importNode: function () {},
    adoptNode: function () {},
    createNodeIterator: function () {},
    createTreeWalker: function () {},
    getOverrideStyle: function () {},
    createExpression: function () {},
    createNSResolver: function () {},
    insertBefore: function () {},
    replaceChild: function () {},
    removeChild: function () {},
    appendChild: function () {},
    hasChildNodes: function () {},
    cloneNode: function () {},
    normalize: function () {},
    isSupported: function () {},
    hasAttributes: function () {},
    lookupPrefix: function () {},
    isDefaultNamespace: function () {},
    lookupNamespaceURI: function () {},
    addEventListener: function () {},
    removeEventListener: function () {},
    isSameNode: function () {},
    isEqualNode: function () {},
    compareDocumentPosition: function () {},
    dispatchEvent: function () {},
    ELEMENT_NODE: 1,
    ATTRIBUTE_NODE: 2,
    TEXT_NODE: 3,
    CDATA_SECTION_NODE: 4,
    ENTITY_REFERENCE_NODE: 5,
    ENTITY_NODE: 6,
    PROCESSING_INSTRUCTION_NODE: 7,
    COMMENT_NODE: 8,
    DOCUMENT_NODE: 9,
    DOCUMENT_TYPE_NODE: 10,
    DOCUMENT_FRAGMENT_NODE: 11,
    NOTATION_NODE: 12,
    DOCUMENT_POSITION_DISCONNECTED: 1,
    DOCUMENT_POSITION_PRECEDING: 2,
    DOCUMENT_POSITION_FOLLOWING: 4,
    DOCUMENT_POSITION_CONTAINS: 8,
    DOCUMENT_POSITION_CONTAINED_BY: 16,
    DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: 32
  },
  newLine: "
",
  times: function () {},
  getProperties: function () {},
  SVGPathSegLinetoVerticalRel: function () {},
  SVGFESpotLightElement: function () {},
  HTMLButtonElement: function () {},
  Worker: function () {},
  webkitIDBTransaction: function () {},
  webkitNotifications:{
    createHTMLNotification: function () {},
    createNotification: function () {},
    checkPermission: function () {},
    requestPermission: function () {}
  },
  EntityReference: function () {},
  NodeList: function () {},
  screenY: 22,
  SVGAnimatedNumber: function () {},
  SVGTSpanElement: function () {},
  navigator:{
    language: "en-US",
    product: "Gecko",
    mimeTypes:{
      length: function () {},
      item: function () {},
      namedItem: function () {}
    },
    appVersion: "5.0 (Macintosh; Intel Mac OS X 10_6_7) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.24 Safari/535.1",
    plugins:{
      length: function () {},
      item: function () {},
      namedItem: function () {},
      refresh: function () {}
    },
    onLine: true,
    platform: "MacIntel",
    vendor: "Google Inc.",
    appCodeName: "Mozilla",
    cookieEnabled: true,
    geolocation:{
      getCurrentPosition: function () {},
      watchPosition: function () {},
      clearWatch: function () {}
    },
    appName: "Netscape",
    productSub: "20030107",
    userAgent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_7) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.24 Safari/535.1",
    vendorSub: "",
    javaEnabled: function () {},
    getStorageUpdates: function () {},
    registerProtocolHandler: function () {},
    webkitGetUserMedia: function () {}
  },
  MimeTypeArray: function () {},
  sessionStorage: function () {},
  SVGPoint: function () {},
  SVGScriptElement: function () {},
  OverflowEvent: function () {},
  HTMLTableColElement: function () {},
  HTMLOptionElement: function () {},
  HTMLInputElement: function () {},
  webkitIDBIndex: function () {},
  SVGFEPointLightElement: function () {},
  SVGPathSegList: function () {},
  SVGImageElement: function () {},
  defaultStatus: "",
  MutationEvent: function () {},
  SVGMarkerElement: function () {},
  HTMLMetaElement: function () {},
  WebKitCSSTransformValue: function () {},
  Clipboard: function () {},
  HTMLTableElement: function () {},
  SharedWorker: function () {},
  SVGAElement: function () {},
  SVGAnimatedRect: function () {},
  webkitIDBDatabaseError: function () {},
  SVGGElement: function () {},
  toolbar:{
    visible: true
  },
  SVGLinearGradientElement: function () {},
  innerHeight: 218,
  webkitIndexedDB:{
    open: function () {}
  },
  SVGForeignObjectElement: function () {},
  SVGAnimateElement: function () {},
  applicationCache:{
    oncached: function () {},
    ondownloading: function () {},
    onupdateready: function () {},
    onerror: function () {},
    status: 0,
    onnoupdate: function () {},
    onchecking: function () {},
    onobsolete: function () {},
    onprogress: function () {},
    update: function () {},
    swapCache: function () {},
    addEventListener: function () {},
    removeEventListener: function () {},
    dispatchEvent: function () {},
    UNCACHED: 0,
    IDLE: 1,
    CHECKING: 2,
    DOWNLOADING: 3,
    UPDATEREADY: 4,
    OBSOLETE: 5
  },
  SVGFontElement: function () {},
  pageXOffset: 0,
  SVGFontFaceElement: function () {},
  Element: function () {},
  SVGPathSegCurvetoQuadraticSmoothRel: function () {},
  opener: function () {},
  SVGStopElement: function () {},
  Float64Array: function () {},
  CSSStyleSheet: function () {},
  StyleSheetList: function () {},
  WebGLShader: function () {},
  Uint32Array: function () {},
  TimeRanges: function () {},
  screenLeft: 0,
  HTMLHRElement: function () {},
  SVGViewElement: function () {},
  SVGGradientElement: function () {},
  SVGPathSegMovetoRel: function () {},
  CanvasPattern: function () {},
  WebGLActiveInfo: function () {},
  HTMLProgressElement: function () {},
  HTMLDivElement: function () {},
  HashChangeEvent: function () {},
  KeyboardEvent: function () {},
  SVGHKernElement: function () {},
  HTMLTitleElement: function () {},
  HTMLQuoteElement: function () {},
  webkitIDBDatabaseException: function () {},
  SVGFEImageElement: function () {},
  DOMTokenList: function () {},
  screenX: 0,
  WebGLProgram: function () {},
  SVGPathSegMovetoAbs: function () {},
  RangeException: function () {},
  SVGTextPathElement: function () {},
  SVGAnimatedTransformList: function () {},
  webkitIDBFactory: function () {},
  HTMLLegendElement: function () {},
  SVGPathSegCurvetoQuadraticAbs: function () {},
  MouseEvent: function () {},
  MediaError: function () {},
  Uint16Array: function () {},
  HTMLObjectElement: function () {},
  HTMLFontElement: function () {},
  SVGFilterElement: function () {},
  WebKitTransitionEvent: function () {},
  MediaList: function () {},
  SVGVKernElement: function () {},
  SVGPaint: function () {},
  SVGFETileElement: function () {},
  Document: function () {},
  XPathException: function () {},
  innerWidth: 1280,
  TextMetrics: function () {},
  personalbar:{
    visible: true
  },
  HTMLHeadElement: function () {},
  SVGFEComponentTransferElement: function () {},
  ProgressEvent: function () {},
  SVGAnimatedPreserveAspectRatio: function () {},
  Node: function () {},
  SVGRectElement: function () {},
  CSSPageRule: function () {},
  SVGLineElement: function () {},
  CharacterData: function () {},
  length: 0,
  FileError: function () {},
  SVGDocument: function () {},
  MessagePort: function () {},
  ClientRect: function () {},
  Option: function () {},
  SVGDescElement: function () {},
  Notation: function () {},
  WebGLBuffer: function () {},
  StorageEvent: function () {},
  HTMLFieldSetElement: function () {},
  HTMLVideoElement: function () {},
  SVGPathSegLinetoRel: function () {},
  locationbar:{
    visible: true
  },
  WebGLTexture: function () {},
  webkitAudioPannerNode: function () {},
  UIEvent: function () {},
  HTMLTableRowElement: function () {},
  HTMLDListElement: function () {},
  File: function () {},
  SVGEllipseElement: function () {},
  SVGFEFuncRElement: function () {},
  Int32Array: function () {},
  HTMLAllCollection: function () {},
  CSSValue: function () {},
  SVGAnimatedNumberList: function () {},
  HTMLParamElement: function () {},
  SVGElementInstance: function () {},
  HTMLModElement: function () {},
  scrollY: 0,
  SVGPathSegLinetoHorizontalRel: function () {},
  outerHeight: 774,
  CSSFontFaceRule: function () {},
  SVGPathSeg: function () {},
  CSSStyleDeclaration: function () {},
  WebSocket: function () {},
  TouchEvent: function () {},
  Rect: function () {},
  StyleSheet: function () {},
  SVGPathSegLinetoHorizontalAbs: function () {},
  SVGColor: function () {},
  ArrayBuffer: function () {},
  SVGComponentTransferFunctionElement: function () {},
  SVGStyleElement: function () {},
  Int16Array: function () {},
  HTMLOutputElement: function () {},
  SVGNumberList: function () {},
  DataView: function () {},
  DeviceOrientationEvent: function () {},
  Blob: function () {},
  SVGFEFloodElement: function () {},
  clientInformation:{
    language: "en-US",
    product: "Gecko",
    mimeTypes:{
      length: function () {},
      item: function () {},
      namedItem: function () {}
    },
    appVersion: "5.0 (Macintosh; Intel Mac OS X 10_6_7) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.24 Safari/535.1",
    plugins:{
      length: function () {},
      item: function () {},
      namedItem: function () {},
      refresh: function () {}
    },
    onLine: true,
    platform: "MacIntel",
    vendor: "Google Inc.",
    appCodeName: "Mozilla",
    cookieEnabled: true,
    geolocation:{
      getCurrentPosition: function () {},
      watchPosition: function () {},
      clearWatch: function () {}
    },
    appName: "Netscape",
    productSub: "20030107",
    userAgent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_7) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.24 Safari/535.1",
    vendorSub: "",
    javaEnabled: function () {},
    getStorageUpdates: function () {},
    registerProtocolHandler: function () {},
    webkitGetUserMedia: function () {}
  },
  CloseEvent: function () {},
  webkitStorageInfo:{
    queryUsageAndQuota: function () {},
    requestQuota: function () {},
    TEMPORARY: 0,
    PERSISTENT: 1
  },
  HTMLStyleElement: function () {},
  HTMLBaseElement: function () {},
  HTMLBRElement: function () {},
  FileReader: function () {},
  SVGFEBlendElement: function () {},
  HTMLHtmlElement: function () {},
  SVGFEConvolveMatrixElement: function () {},
  SVGFEGaussianBlurElement: function () {},
  HTMLTextAreaElement: function () {},
  HTMLBaseFontElement: function () {},
  scrollbars:{
    visible: true
  },
  webkitIDBCursor: function () {},
  screen:{
    availTop: 22,
    pixelDepth: 24,
    availHeight: 774,
    height: 800,
    width: 1280,
    colorDepth: 24,
    availWidth: 1280,
    availLeft: 0
  },
  localStorage: function () {},
  defaultstatus: "",
  WebGLRenderbuffer: function () {},
  SVGTextElement: function () {},
  SVGFEOffsetElement: function () {},
  RGBColor: function () {},
  SVGGlyphElement: function () {},
  Float32Array: function () {},
  HTMLCanvasElement: function () {},
  ProcessingInstruction: function () {},
  SVGZoomEvent: function () {},
  HTMLFrameElement: function () {},
  SVGElementInstanceList: function () {},
  SVGFEDisplacementMapElement: function () {},
  SVGPathSegCurvetoCubicSmoothRel: function () {},
  HTMLElement: function () {},
  HTMLSelectElement: function () {},
  Int8Array: function () {},
  SVGFEDistantLightElement: function () {},
  ImageData: function () {},
  SVGFEFuncBElement: function () {},
  HTMLIsIndexElement: function () {},
  HTMLDocument: function () {},
  SVGCircleElement: function () {},
  HTMLCollection: function () {},
  SVGSetElement: function () {},
  SVGFEMergeElement: function () {},
  HTMLDirectoryElement: function () {},
  CSSMediaRule: function () {},
  MessageEvent: function () {},
  SVGFESpecularLightingElement: function () {},
  DOMException: function () {},
  SVGNumber: function () {},
  SVGFontFaceSrcElement: function () {},
  CSSRule: function () {},
  SVGElement: function () {},
  WebKitCSSMatrix: function () {},
  status: "",
  SVGMissingGlyphElement: function () {},
  HTMLScriptElement: function () {},
  DOMImplementation: function () {},
  SVGLength: function () {},
  HTMLOptGroupElement: function () {},
  SVGPathSegLinetoVerticalAbs: function () {},
  SVGTextPositioningElement: function () {},
  HTMLKeygenElement: function () {},
  styleMedia:{
    type: "screen",
    matchMedium: function () {}
  },
  SVGFEFuncGElement: function () {},
  HTMLAreaElement: function () {},
  HTMLFrameSetElement: function () {},
  SVGPathSegCurvetoQuadraticRel: function () {},
  name: "",
  HTMLIFrameElement: function () {},
  Comment: function () {},
  Event: function () {},
  Storage: function () {},
  XMLSerializer: function () {},
  performance:{
    memory:{
      totalJSHeapSize: function () {},
      usedJSHeapSize: function () {},
      jsHeapSizeLimit: function () {}
    },
    timing:{
      connectStart: function () {},
      responseStart: function () {},
      domLoading: function () {},
      connectEnd: function () {},
      domInteractive: function () {},
      fetchStart: function () {},
      secureConnectionStart: function () {},
      domainLookupStart: function () {},
      responseEnd: function () {},
      requestStart: function () {},
      loadEventEnd: function () {},
      domComplete: function () {},
      redirectStart: function () {},
      unloadEventEnd: function () {},
      domContentLoadedEventStart: function () {},
      domContentLoadedEventEnd: function () {},
      domainLookupEnd: function () {},
      navigationStart: function () {},
      unloadEventStart: function () {},
      loadEventStart: function () {},
      redirectEnd: function () {}
    },
    navigation:{
      redirectCount: function () {},
      type: function () {},
      TYPE_NAVIGATE: function () {},
      TYPE_RELOAD: function () {},
      TYPE_BACK_FORWARD: function () {},
      TYPE_RESERVED: function () {}
    }
  },
  statusbar:{
    visible: true
  },
  Range: function () {},
  HTMLPreElement: function () {},
  DOMStringList: function () {},
  Image: function () {},
  SVGPathSegCurvetoQuadraticSmoothAbs: function () {},
  SVGRect: function () {},
  SVGFontFaceFormatElement: function () {},
  closed: false,
  crypto:{
    getRandomValues: function () {}
  },
  SVGAnimateTransformElement: function () {},
  HTMLFormElement: function () {},
  webkitIDBDatabase: function () {},
  SVGPathSegCurvetoCubicSmoothAbs: function () {},
  DOMParser: function () {},
  SVGPathSegClosePath: function () {},
  console:{
    profiles: function () {},
    memory:{
      totalJSHeapSize: function () {},
      usedJSHeapSize: function () {},
      jsHeapSizeLimit: function () {}
    },
    _commandLineAPI:{
      $: function () {},
      $$: function () {},
      $x: function () {},
      dir: function () {},
      dirxml: function () {},
      keys: function () {},
      values: function () {},
      profile: function () {},
      profileEnd: function () {},
      monitorEvents: function () {},
      unmonitorEvents: function () {},
      inspect: function () {},
      copy: function () {},
      clear: function () {},
      $0: function () {},
      $1: function () {},
      $2: function () {},
      $3: function () {},
      $4: function () {}
    },
    debug: function () {},
    error: function () {},
    info: function () {},
    log: function () {},
    warn: function () {},
    dir: function () {},
    dirxml: function () {},
    trace: function () {},
    assert: function () {},
    count: function () {},
    markTimeline: function () {},
    profile: function () {},
    profileEnd: function () {},
    time: function () {},
    timeEnd: function () {},
    group: function () {},
    groupCollapsed: function () {},
    groupEnd: function () {}
  },
  SVGPathSegArcRel: function () {},
  EventException: function () {},
  SVGAnimatedString: function () {},
  SVGTransformList: function () {},
  webkitIDBRequest: function () {},
  SVGFEMorphologyElement: function () {},
  SVGAnimatedLength: function () {},
  SVGPolygonElement: function () {},
  scrollX: 0,
  SVGPathSegLinetoAbs: function () {},
  WebKitFlags: function () {},
  HTMLMediaElement: function () {},
  XMLDocument: function () {},
  webkitIDBObjectStore: function () {},
  SVGMaskElement: function () {},
  HTMLHeadingElement: function () {},
  XMLHttpRequest: function () {},
  TextEvent: function () {},
  event: undefined,
  HTMLMeterElement: function () {},
  SVGPathElement: function () {},
  SVGStringList: function () {},
  HTMLAppletElement: function () {},
  devicePixelRatio: 1,
  FileList: function () {},
  webkitURL:{
    revokeObjectURL: function () {},
    createObjectURL: function () {}
  },
  CanvasRenderingContext2D: function () {},
  MessageChannel: function () {},
  SVGFEDropShadowElement: function () {},
  WebGLRenderingContext: function () {},
  webkitIDBKeyRange: function () {},
  HTMLMarqueeElement: function () {},
  WebKitCSSKeyframesRule: function () {},
  XSLTProcessor: function () {},
  CSSImportRule: function () {},
  BeforeLoadEvent: function () {},
  PageTransitionEvent: function () {},
  CSSRuleList: function () {},
  SVGAnimatedLengthList: function () {},
  SVGTransform: function () {},
  SVGTextContentElement: function () {},
  HTMLTableSectionElement: function () {},
  SVGRadialGradientElement: function () {},
  HTMLTableCellElement: function () {},
  SVGCursorElement: function () {},
  DocumentFragment: function () {},
  SVGPathSegCurvetoCubicAbs: function () {},
  SVGUseElement: function () {},
  FormData: function () {},
  SVGPreserveAspectRatio: function () {},
  HTMLMapElement: function () {},
  XPathResult: function () {},
  HTMLLIElement: function () {},
  SVGSwitchElement: function () {},
  SVGLengthList: function () {},
  Plugin: function () {},
  HTMLParagraphElement: function () {},
  HTMLBlockquoteElement: function () {},
  SVGPathSegArcAbs: function () {},
  SVGAnimatedBoolean: function () {},
  outerWidth: 1280,
  CSSStyleRule: function () {},
  SVGFontFaceUriElement: function () {},
  Text: function () {},
  HTMLUListElement: function () {},
  WebGLUniformLocation: function () {},
  SVGPointList: function () {},
  CSSPrimitiveValue: function () {},
  HTMLEmbedElement: function () {},
  PluginArray: function () {},
  SVGPathSegCurvetoCubicRel: function () {},
  ClientRectList: function () {},
  SVGMetadataElement: function () {},
  SVGTitleElement: function () {},
  SVGAnimatedAngle: function () {},
  CSSCharsetRule: function () {},
  menubar:{
    visible: true
  },
  SVGAnimateColorElement: function () {},
  SVGMatrix: function () {},
  HTMLBodyElement: function () {},
  SVGSymbolElement: function () {},
  HTMLAudioElement: function () {},
  CDATASection: function () {},
  SVGFEDiffuseLightingElement: function () {},
  SVGFETurbulenceElement: function () {},
  WebKitBlobBuilder: function () {},
  SVGAnimatedEnumeration: function () {},
  WebKitCSSKeyframeRule: function () {},
  Audio: function () {},
  SVGFEMergeNodeElement: function () {},
  history:{
    length: 1,
    go: function () {},
    forward: function () {},
    back: function () {},
    pushState: function () {},
    replaceState: function () {}
  },
  Entity: function () {},
  SQLException: function () {},
  HTMLTableCaptionElement: function () {},
  DOMStringMap: function () {},
  MimeType: function () {},
  EventSource: function () {},
  SVGException: function () {},
  NamedNodeMap: function () {},
  WebGLFramebuffer: function () {},
  XMLHttpRequestUpload: function () {},
  WebKitAnimationEvent: function () {},
  Uint8Array: function () {},
  SVGAnimatedInteger: function () {},
  HTMLMenuElement: function () {},
  SVGDefsElement: function () {},
  SVGAngle: function () {},
  SVGSVGElement: function () {},
  XPathEvaluator: function () {},
  HTMLImageElement: function () {},
  NodeFilter: function () {},
  SVGAltGlyphElement: function () {},
  SVGClipPathElement: function () {},
  Attr: function () {},
  Counter: function () {},
  SVGPolylineElement: function () {},
  DOMSettableTokenList: function () {},
  SVGPatternElement: function () {},
  SVGFECompositeElement: function () {},
  CSSValueList: function () {},
  XMLHttpRequestException: function () {},
  SVGFEColorMatrixElement: function () {},
  SVGTRefElement: function () {},
  WheelEvent: function () {},
  SVGUnitTypes: function () {},
  HTMLLabelElement: function () {},
  HTMLAnchorElement: function () {},
  SVGFEFuncAElement: function () {},
  CanvasGradient: function () {},
  frameElement: undefined,
  DocumentType: function () {},
  HTMLOListElement: function () {},
  SVGRenderingIntent: function () {},
  WebKitPoint: function () {},
  HTMLLinkElement: function () {},
  offscreenBuffering: true,
  pageYOffset: 0,
  SVGFontFaceNameElement: function () {},
  screenTop: 22,
  onseeked: function () {},
  onkeypress: function () {},
  onwebkitanimationend: function () {},
  onmouseup: function () {},
  onemptied: function () {},
  onseeking: function () {},
  onclick: function () {},
  onmousedown: function () {},
  onwebkitanimationiteration: function () {},
  onpopstate: function () {},
  onmessage: function () {},
  onunload: function () {},
  onmouseover: function () {},
  blur: function () {},
  ontimeupdate: function () {},
  onstalled: function () {},
  onvolumechange: function () {},
  ondragenter: function () {},
  ondurationchange: function () {},
  onwaiting: function () {},
  ondragstart: function () {},
  onstorage: function () {},
  ononline: function () {},
  onbeforeunload: function () {},
  onplay: function () {},
  onloadstart: function () {},
  onsuspend: function () {},
  ondrag: function () {},
  onscroll: function () {},
  ondblclick: function () {},
  ondragend: function () {},
  onloadedmetadata: function () {},
  onpagehide: function () {},
  onmousewheel: function () {},
  onreset: function () {},
  onpageshow: function () {},
  onpause: function () {},
  onmouseout: function () {},
  oninvalid: function () {},
  close: function () {},
  onsubmit: function () {},
  oncontextmenu: function () {},
  onoffline: function () {},
  onload: function () {},
  ondragleave: function () {},
  onkeyup: function () {},
  onkeydown: function () {},
  oncanplay: function () {},
  oncanplaythrough: function () {},
  ondrop: function () {},
  ondragover: function () {},
  onratechange: function () {},
  onerror: function () {},
  onloadeddata: function () {},
  onwebkitanimationstart: function () {},
  onabort: function () {},
  onselect: function () {},
  onplaying: function () {},
  ondeviceorientation: function () {},
  focus: function () {},
  onsearch: function () {},
  onhashchange: function () {},
  onended: function () {},
  onmousemove: function () {},
  onwebkittransitionend: function () {},
  postMessage: function () {},
  onchange: function () {},
  onprogress: function () {},
  oninput: function () {},
  onblur: function () {},
  onresize: function () {},
  onfocus: function () {},
  getSelection: function () {},
  print: function () {},
  stop: function () {},
  open: function () {},
  showModalDialog: function () {},
  alert: function () {},
  confirm: function () {},
  prompt: function () {},
  find: function () {},
  scrollBy: function () {},
  scrollTo: function () {},
  scroll: function () {},
  moveBy: function () {},
  moveTo: function () {},
  resizeBy: function () {},
  resizeTo: function () {},
  matchMedia: function () {},
  setTimeout: function () {},
  clearTimeout: function () {},
  setInterval: function () {},
  clearInterval: function () {},
  webkitRequestAnimationFrame: function () {},
  webkitCancelRequestAnimationFrame: function () {},
  atob: function () {},
  btoa: function () {},
  addEventListener: function () {},
  removeEventListener: function () {},
  captureEvents: function () {},
  releaseEvents: function () {},
  getComputedStyle: function () {},
  getMatchedCSSRules: function () {},
  webkitConvertPointFromPageToNode: function () {},
  webkitConvertPointFromNodeToPage: function () {},
  openDatabase: function () {},
  webkitRequestFileSystem: function () {},
  webkitResolveLocalFileSystemURL: function () {},
  dispatchEvent: function () {},
  TEMPORARY: 0,
  PERSISTENT: 1
}